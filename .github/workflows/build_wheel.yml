name: Build Wheel

on:
  workflow_dispatch:

# if a new request comes through, cancel previous workflow and start again
concurrency:
  group: '${{ github.workflow }} @ ${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

# artifacts:
#   paths:
#     - ./dist/*.whl

env:
  ARTIFACT: artifact.bin

jobs:

  build:

    strategy:
        matrix:
          os: [ "windows-latest", "macos-latest" ]

    name: Build Wheel
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10

    defaults:
      run:
        shell: bash

  # Build the test suite
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: develop
      - run: git pull origin develop

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9.13'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-pip-wheels
        uses: actions/cache@v3
        with:
          path: ~/.cache
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Install library
        run: poetry install --no-interaction

      - run: |
          source $VENV
          pytest --version

  # Run wheel build and install
      - name: Build wheel and install
        run: |
          poetry build
      - uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.os }}-${{ github.sha }}
          path: ${{ env.ARTIFACT }}
          if-no-files-found: error

  publish:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: artifacts

      - shell: bash
        working-directory: artifacts
        run: |
          for i in $( ls ); do
            cat $i/$ARTIFACT
          done