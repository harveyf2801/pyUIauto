name: Run dev tests (poetry)

on:
  workflow_dispatch:

permissions:
  contents: read

# if a new request comes through, cancel previous workflow and start again
concurrency:
  group: '${{ github.workflow }} @ ${{ github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:

  run-tests:

    strategy:
        matrix:
          os: [ "windows-latest", "macos-latest" ]

    name: Run dev tests (poetry)
    runs-on: ${{ matrix.os }}
    timeout-minutes: 8

    defaults:
      run:
        shell: bash

  # Build the test suite
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          ref: main
      - run: git pull origin main

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9.13'

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Load cached venv
        id: cached-pip-wheels
        uses: actions/cache@v3
        with:
          path: ~/.cache
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Install library
        run: poetry install --no-interaction

      - run: |
          source $VENV
          pytest --version

  # Run dev tests
      - name: Run OS compatibility tests
        run: echo "Running OS compatibility tests"
      - run: |
          poetry run pytest tests/test_os.py -vvv -s --noconftest --log-cli-level=DEBUG  -p no:faulthandler

      - name: Run general package tests
        run: echo "Running general package tests"
      - run: |
          poetry run pytest tests/test_pyuiauto.py -vvv -s --log-cli-level=DEBUG -p no:faulthandler
